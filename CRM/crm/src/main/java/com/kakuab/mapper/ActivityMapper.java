package com.kakuab.mapper;

import com.kakuab.pojo.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 14 13:26:35 CST 2022
     */
    int deleteByPrimaryKey(String id);



    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 14 13:26:35 CST 2022
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 14 13:26:35 CST 2022
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 14 13:26:35 CST 2022
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 14 13:26:35 CST 2022
     */
    int updateByPrimaryKey(Activity record);

    /**
     * 创建市场活动
     */
    int insertActivity(Activity activity);

    /**
     * 根据条件分页查询市场活动的列表
     * @param map
     * @return
     */
    List<Activity> selectActivityByConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询市场活动的总条数
     * @param map
     * @return
     */
    int selectCountOfActivityByCondition(Map<String,Object> map);

    /**
     * 根据市场活动主键删除数据
     * @param id
     * @return
     */
    int deleteActivityByIds(String[] id);

    /**
     * 根据主键id查询市场活动
     * @param id
     * @return
     */
    Activity queryActivityByID(String id);

    /**
     * 根据主键更新市场活动
     * @param activity
     * @return
     */
    int updateActivityById(Activity activity);

    /**导出
     * 查询所有市场活动信息
     * @return
     */
    List<Activity> selectAllActivities();

    /**
     * 根据市场活动主键选择导出
     * @param id
     * @return
     */
    List<Activity> selectExportActivityById(String[] id);

    /**
     * 根据上传的文件插入数据
     * @param activityList
     * @return
     */
    int importActivityByList(List<Activity> activityList);

    /**
     * 根据id查询市场活动的明细信息
     * @param id
     * @return
     */
    Activity selectActivityForDetailByid(String id);

    /**
     * 根据线索id查询市场活动的相关信息
     * @param clueId
     * @return
     */
    List<Activity> selectActivityByCLueId(String clueId);

    /**
     * 根据name模糊查询市场活动并且排除clueId关联过的信息
     * @param map
     * @return
     */
    List<Activity> selectActivityForDetailByNameClueId(Map<String,Object> map);

    /**
     * 根据ids查询市场活动关联关系的信息
     * @param ids
     * @return
     */
    List<Activity> selectAicivityForDetailByIds(String[] ids);

    List<Activity> selectActivityForDetailByNameClueIdIn(Map<String,Object> map);
}