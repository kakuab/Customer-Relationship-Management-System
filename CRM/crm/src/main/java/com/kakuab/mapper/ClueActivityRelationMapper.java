package com.kakuab.mapper;

import com.kakuab.pojo.ClueActivityRelation;

import java.util.List;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Jun 11 16:27:16 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Jun 11 16:27:16 CST 2022
     */
    int insert(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Jun 11 16:27:16 CST 2022
     */
    int insertSelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Jun 11 16:27:16 CST 2022
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Jun 11 16:27:16 CST 2022
     */
    int updateByPrimaryKeySelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Jun 11 16:27:16 CST 2022
     */
    int updateByPrimaryKey(ClueActivityRelation record);

    /**
     * 根据保存创建的线索和市场活动关联关系
     * @param clueActivityRelationList
     * @return
     */
    int insertClueActivityRelationByList(List<ClueActivityRelation> clueActivityRelationList);

    /**
     * 根据activityId和clueId删除市场活动关联线索的信息
     * @param clueActivityRelation
     * @return
     */
    int deleteClueActivityRelationByActivityIdClueId(ClueActivityRelation clueActivityRelation);

    /**
     * 根据clueId查询线索和市场活动的关联关系
     * @param clueId
     * @return
     */
    List<ClueActivityRelation> selectClueActivityByClueId(String clueId);

    /**
     * 根据clueId删除线索和市场活动关联关系
     * @param clueId
     * @return
     */
    int delteClueActivityRelationByClueId(String clueId);
}